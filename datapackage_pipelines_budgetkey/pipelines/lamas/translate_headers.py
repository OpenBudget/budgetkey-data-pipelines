import re

from datapackage_pipelines.wrapper import ingest, spew

parameters, datapackage, res_iter = ingest()

translation = {
    'מספר': 'number',
    'משפחות': 'families',
    'סמל': 'symbol',
    'שם': 'name',
    'הרשות': 'municipality',
    'הרשות1': 'municipality',
    'מחוז': 'district',
    'מעמד': 'status',
    'מוניציפלי': 'municipal',
    'מרחק': 'distance',
    'מגבול': 'border',
    'תל': 'tel',
    'אביב': 'aviv',
    'ק"מ': 'km',
    'שנת': 'year',
    'קבלת': 'reception',
    'מרחב': 'space',
    'ימי': 'sea',
    'רשויות': 'municipalities',
    'מקומיות': 'local',
    'הגובלות': 'bordering',
    'בחוף': 'beach',
    'הים': 'sea',
    'חברי': 'members',
    'מועצה': 'council',
    'ועדת': 'committee',
    'תכנון': 'planning',
    'ובנייה': 'construction',
    'בנייה': 'construction',
    'חברתי-כלכלי': 'socioeconomic',
    'אשכול': 'cluster',
    'מ-1': 'from_1',
    'עד': 'to',
    'הנמוך': 'lowest',
    'ביותר': 'most',
    'ערך': 'value',
    'דירוג': 'rating',
    'סה"כ': 'total',
    'אוכלוסייה': 'population',
    'בסוף': 'end',
    'יהודים': 'jews',
    'ואחרים': 'others',
    'אחוזים': 'pct',
    'ערבים': 'arab',
    'מוסלמים': 'muslim',
    'נוצרים': 'christian',
    'דרוזים': 'druse',
    'גברים': 'men',
    'נשים': 'women',
    'יחס': 'ratio',
    'תלות': 'dependency',
    'תושבים': 'residents',
    'בלתי': 'non',
    'תלויים': 'dependent',
    'אחוז': 'pct',
    'בני': 'aged',
    'באוכלוסייה': 'in_population',
    'ומעלה': 'and_above',
    'לידות': 'births',
    'חי': 'live',
    'פטירות': 'deaths',
    'ריבוי': 'reproduction',
    'טבעי': 'natural',
    'לאלף': 'per_1000',
    'מאזן': 'balance',
    'הגירה': 'immigration',
    'עולי': 'immigrants',
    'מסך': 'of',
    'האוכלוסייה': 'population',
    'גידול': 'growth',
    'תינוקות': 'babies',
    'שיעור': 'rate',
    'תינוקות1': 'babies',
    'השתקעות': 'settlement',
    'ראשונה': 'first',
    'של': 'of',
    'עולים': 'immigrants',
    'בהשתקעות': 'settlement',
    'פנימית': 'internal',
    'נכנסים': 'incoming',
    'מיישובים': 'from_places',
    'אחרים': 'other',
    'גיל': 'age',
    'יוצאים': 'outgoing',
    'ליישובים': 'to_places',
    'מקבלי': 'recip',
    'דמי': 'funds',
    'אבטלה': 'unemployment',
    'חודשי': 'monthly',
    'הכשרה': 'training',
    'מקצועית': 'professional',
    'ממוצע': 'avg',
    'לא': 'not',
    'חיילים': 'soldiers',
    'ממוצעים': 'avg',
    'ליום': 'daily',
    'ש"ח': 'nis',
    'קצבאות': 'handouts',
    'זקנה': 'old_age',
    'ושאירים': 'survivors',
    'השלמת': 'supp',
    'הכנסה': 'income',
    'מבין': 'out_of',
    'גמלת': 'allowance',
    'הבטחת': 'ensuring',
    'במשך': 'during',
    'השנה': 'the_year',
    'גמלאות': 'pension',
    'סיעוד': 'nursing',
    'נכות': 'disabled',
    'כללית': 'general',
    'ניידות': 'mobility',
    'מעבודה': 'work',
    'ותלויים': 'dependeny',
    'מבוטחים': 'insured',
    'בקופת': 'fund',
    'חולים': 'sick',
    'המבוטחים': 'insured',
    'בקופ"ח': 'sick_fund',
    'מתוך': 'out',
    'סך': 'number',
    'כל': 'all',
    'מכבי': 'maccabee',
    'מאוחדת': 'meuhedet',
    'לאומית': 'leumit',
    'בגין': 'due',
    'ילדים': 'kids',
    'עם': 'with',
    'במשפחה': 'in_family',
    'ויותר': 'and_more',
    'שבגינם': 'due_to',
    'שולמו': 'paid',
    'הילדים': 'the_kids',
    'במשפחות': 'in_families',
    'שכר': 'wage',
    'לחודש': 'monthly',
    'שכירים': 'employees',
    'שכירות': 'rent',
    'שינוי': 'change',
    'ראלי': 'real',
    'שנה': 'year',
    'קודמת': 'previous',
    'השכירים': 'employees',
    'ב-2014': 'in_2014',
    'המשתכרים': 'earning',
    'מינימום': 'min',
    'העצמאים': 'freelancers',
    'ממוצעת': 'avg',
    'לעומת': 'vs',
    'מחצית': 'half',
    'השכר': 'wage',
    'הממוצע': 'avg',
    'אי-השוויון': 'inequality',
    'מדד': 'index',
    "ג'יני": 'gini',
    'שוויון': 'equality',
    'מלא': 'full',
    'בגנים': 'in_kindergartens',
    'משרד': 'ministry',
    'החינוך': 'education',
    'תשע"ה': '2015',
    'בתי': '',
    'ספר': 'schools',
    'יסודיים': 'elementary',
    'כולל': 'incl',
    'חינוך': 'education',
    'מיוחד': 'special',
    'על': 'on',
    'חטיבות': 'middle_school',
    'ביניים': '',
    'תיכוניים': 'high',
    'כיתות': 'classes',
    'בבתי': 'in',
    'על-יסודיים': 'high',
    'בחטיבות': 'middle_school',
    'תלמידים': 'students',
    'לכיתה': 'per_class',
    'זכאים': 'entitled',
    'לתעודת': 'diploma',
    'בגרות': 'high_school',
    'תלמידי': 'students',
    'יב': '12th',
    'שעמדו': 'passed',
    'בדרישות': 'certification',
    'הסף': 'level',
    'האוניברסיטאות': 'university',
    'תקבולי': 'income',
    'מים': 'water',
    'אלפי': '1000s',
    'פחת': 'depreciation',
    'המים': 'water',
    'צריכת': 'use',
    'וכל': 'and_all',
    'צריכה': 'use',
    'אחרת': 'other',
    'חקלאית': 'agriculture',
    'מסה"כ': 'out_of_total',
    'למגורים': 'residential',
    'למוסדות': 'institutional',
    'המקומית': 'local',
    'לגינון': 'gardening',
    'ציבורי': 'public',
    'למסחר': 'commerce',
    'ומלאכה': 'workshops',
    'לבנייה': 'construction',
    'מ"ק': 'm3',
    'לנפש': 'per_capita',
    'התחלת': 'beginning',
    'שטח': 'area',
    'מ"ר': 'm2',
    'דירות': 'flats',
    'גמר': 'done',
    'לפי': 'by',
    'מרשם': 'registration',
    'מבנים': 'buildings',
    'ודירות': 'and_flats',
    'יוני': 'june',
    'התחלה': 'beginning',
    'סלילת': 'paving',
    'כבישים': 'roads',
    'חדשים': 'new',
    'הרחבה': 'enlargement',
    'ושיקום': 'repairing',
    'אורך': 'length',
    'הנחת': 'laying',
    'צינורות': 'pipes',
    'ביוב': 'sewer',
    'תיעול': 'tunneling',
    'פסולת': 'waste',
    'מוצקה': 'solid',
    'ביתית': 'residential',
    'מסחרית': 'commercial',
    'וגזם': 'cutting',
    'ק"ג': 'kg',
    'מחזור': 'recyc ling',
    'כלי': 'vehicles',
    'רכב': 'transportation',
    'מנועיים': 'motorized',
    'מכוניות': 'cars',
    'פרטיות': 'private',
    'פרטי': 'private',
    'שנים': 'years',
    'תאונות': 'accidents',
    'דרכים': 'road',
    'נפגעים': 'injured',
    'ל-1,000': 'per_1000',
    'קומפקטיות': 'compact',
    'הקומפקטי': 'compact',
    'ציון': 'grade',
    'תקן': 'std',
    'פריפריאליות': 'peripheral',
    'אשכול:': 'cluster',
    'הפריפריאלי': 'compact',
    'רמה': 'grade',
    'קבוצת': 'group',
    'דירוג:': 'rating',
    'מרכיבי': 'ingredients',
    'המדד': 'rating',
    'נגישות': 'accessibility',
    'פוטנציאלית': 'potential',
    'הנגישות': 'accessibility',
    'הנמוכה': 'lowest',
    'קרבה': 'closeness',
    'לגבול': 'to_border',
    'המרוחק': 'farthest',
    'אפיון': 'prop',
    'טופוגרפי': 'topographic',
    'גובה': 'height',
    'מעל': 'above',
    'פני': 'level',
    'במטרים': 'm',
    'מינימלי': 'minimal',
    'מקסימלי': 'xmaximal',
    'טווח': 'range',
    'הגבהים': 'heights',
    'א': '',
    'סטיית': 'std',
    'התקן': 'dev',
    'ב': '',
    'שיפוע': 'inclination',
    'במעלות': 'degrees',
    'טופוגרפיה': 'topography',
    'ציוני': 'grades',
    'ו-ב': '',
    'שימושי': 'uses',
    'קרקע': 'land',
    'הכל': 'all',
    'שיפוט': 'jurisdiction',
    'בקמ"ר': 'km2',
    'מגורים': 'residential',
    'והשכלה': 'education',
    'בריאות': 'health',
    'ורווחה': 'welfare',
    'שירותים': 'services',
    'ציבוריים': 'public',
    'תרבות': 'culture',
    'פנאי': 'leisure',
    'נופש': 'recreation',
    'וספורט': 'sport',
    'מסחר': 'commerce',
    'ומשרדים': 'offices',
    'תעשייה': 'industry',
    'תשתית': 'infrastructure',
    'ותחבורה': 'transporation',
    'חקלאיים': 'agricultural',
    'גינון': 'gardening',
    'לנוי': 'decoration',
    'פארק': 'park',
    'יער': 'forest',
    'וחורש': 'grove',
    'מטעים': 'plantation',
    'שדה': 'field',
    'פתוח': 'open',
    'אחר': 'other',
    'סוף': 'end',
    'אלפים': '1000s',
    'צפיפות': 'density',
    'לשטח': 'area',
    'בנוי': 'build',
    'נפשות': 'person',
    'לקמ"ר': 'per_km3',
    'ל-1000': 'per_1000',
    'הכנסות': 'income',
    'מהתקציב': 'budget',
    'הרגיל': 'regular',
    'מחינוך': 'of_education',
    'מרווחה': 'of_welfare',
    'ממפעל': 'of_factory',
    'עצמיות': 'own',
    'מארנונה': 'of_arnona',
    'גבייה': 'collection',
    '-יחס': 'ration',
    'ב-%': 'percent',
    'לכלל': 'to_all',
    'החיובים': 'charges',
    'ארנונה': 'arnona',
    'פטורים': 'exemption',
    'שחרורים': 'releases',
    'והנחות': 'discounts',
    'קרן': 'fund',
    'ריבית': 'interest',
    'גביית': 'collection',
    'פיגורים': 'late',
    'ממשרד': 'ministry',
    'הרווחה': 'welfare',
    'השתתפות': 'part',
    'הממשלה': 'government',
    'בהכנסות': 'income',
    'מענק': 'grant',
    'כללי': 'general',
    'לאיזון': 'balancing',
    'מיועד': 'dedicated',
    'העברות': 'xfer',
    'והכנסות': 'incomes',
    'חד-פעמיות': 'one_time',
    'לכיסוי': 'to_cover',
    'גירעון': 'deficit',
    'מצטבר': 'acc',
    'מלוות': 'loans',
    'מתקציב': 'budget',
    'רגיל': 'regular',
    'בעלי': 'own',
    'נכסים': 'assets',
    'משרדי': '',
    'ממשלה': 'government',
    'הוצאות': 'expenses',
    'בתקציב': 'budget',
    'לחינוך': 'of_education',
    'לרווחה': 'of_welfare',
    'לרכישת': 'to_purchase',
    'לעלות': 'of_cost',
    'עבודה': 'work',
    'לפעולות': 'for_activities',
    'לפירעון': 'to_pay',
    'מימון': 'to_fund',
    'והוצאות': 'expenses',
    'כיסוי': 'cover',
    'כלליות': 'general',
    'השתתפויות': 'participations',
    'והעברות': 'xfer',
    'הכול': 'everything',
    'עומס': 'load',
    'לסוף': 'to_end',
    'הפרשי': 'difference',
    'הצמדה': 'linked',
    'לעבודות': 'to_work',
    'פיתוח': 'develop',
    'להעברת': 'to_transfer',
    'עודף': 'excess',
    'ללא': 'without',
    'עודף/גירעון': 'excess_deficit',
    'חיוב': 'charge',
    'באלפי': '1000s',
    'למשרדים': 'offices',
    'ומסחר': 'commerce',
    'לתעשייה': 'industry',
    'ולמלאכה': 'workshops',
    'לבנקים': 'banks',
    'וחברות': 'firms',
    'ביטוח': 'insurance',
    'לבתי': '',
    'מלון': 'hotels',
    'לחניונים': 'parking_lots',
    'לקרקע': 'land',
    'תפוסה': 'occ',
    'במפעל': 'industry',
    'עתיר': 'rich',
    'לאדמה': 'land',
    'למבנה': 'building',
    'חקלאי': 'agriculture',
    'ליתר': 'rest',
    'סוגי': 'kinds',
    'נכס': 'asset',
    'המרחקים': 'distances',
    'משוקלל': 'weighted',
    'יישובים': 'entities',
    'במועצה': 'council',
    'מושבים': 'moshav',
    'לרבות': 'incl',
    'כפרים': 'kfar',
    'שיתופיים': 'sharing',
    'קיבוצים': 'kibutz',
    'מוסדיים': 'institute',
    'יהודיים': 'jewish',
    'כפריים': 'rural',
    'קהילתיים': 'community',
    'לא-יהודיים': 'non_jewish',
    'עירוניים': 'urban',
    'החינוך-': 'education',
    '2015_1': '2015_1',
    'רשות': 'municipality',
}

numbers = re.compile('[0-9-/]+')
punctuation = re.compile('[.,-]+')

field_name_conversion = {}
all_headers = set()

def process_resource(res_):
    for row in res_:
        yield dict(
            (field_name_conversion[k], v)
            for k, v
            in row.items()
            if k not in ['', 'shinuyrealiarnonagvia1', 'shinuyrealiArnonaMegurim1', 'סמל רשות']
        )


def process_resources(res_iter_):
    for res in res_iter_:
        if 'lamas' in res.spec['name']:
            yield process_resource(res)
        else:
            yield res


def process_datapackage(datapackage):
    for resource in datapackage['resources']:
        if 'lamas' not in resource['name']:
            continue
        new_fields = []
        for field in resource['schema']['fields']:
            orig_name = field['name']
            name = orig_name
            for c in ',+():':
                name = name.replace(c, '')
            name = name.strip()
            if name in ['', 'shinuyrealiarnonagvia1', 'shinuyrealiArnonaMegurim1', 'סמל רשות']:
                continue
            parts = []
            for word in name.strip().split():
                if punctuation.fullmatch(word):
                    pass
                elif numbers.fullmatch(word):
                    parts.append(word)
                else:
                    if translation[word] != '':
                        parts.append(translation[word])
            new_name = '_'.join(parts)
            field_name_conversion[orig_name] = new_name
            field['name'] = new_name
            new_fields.append(field)
            all_headers.add(new_name)
        resource['schema']['fields'] = new_fields
    return datapackage

spew(process_datapackage(datapackage), process_resources(res_iter))

all_headers = sorted(all_headers)